
name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Navigate to backend and install dependencies
      run: |
        cd Backend
        npm install

    - name: Run tests
      run: |
        cd Backend
        npm test

    - name: Lint code
      run: |
        cd Backend
        npm run lint

    # - name: Build Docker image
    #   run: |
    #     cd Backend
    #     docker build -t your-dockerhub-username/your-app-name:tagname-${{ github.sha }} .

    # - name: Log in to Docker Hub
    #   run: docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" -p "${{ secrets.DOCKER_HUB_PASSWORD }}"

    # - name: Push Docker image
    #   run: docker push your-dockerhub-username/your-app-name:tagname-${{ github.sha }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Build Docker image
      run: |
          cd Backend
          sudo docker build -t your-dockerhub-username/your-app-name:tagname-${{ github.sha }} .

    - name: Log in to Docker Hub
      run: echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | sudo docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin

    - name: Push Docker image
      run: sudo docker push your-dockerhub-username/your-app-name:tagname-${{ github.sha }}

    - name: Logout from Docker Hub
      run: sudo docker logout


  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Deploy to production server
      uses: appleboy/ssh-action@v0.1.4
      with:
        host: ${{ secrets.PROD_SERVER_HOST }}
        username: ${{ secrets.PROD_SERVER_USER }}
        key: ${{ secrets.PROD_SERVER_SSH_KEY }}
        script: |
          docker pull aashutoshkarale/travelbuddy:${{ github.sha }}
          docker stop app || true
          docker rm app || true
          docker run -d --name app -p 80:3000 your-dockerhub-username/your-app-name:${{ github.sha }}
